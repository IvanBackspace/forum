{"version":3,"file":"request.js","sources":["request.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const style = document.createElement('style');\r\n    style.type = 'text/css';\r\n    style.innerHTML = `\r\n    .custom-error {\r\n        border: 1px solid red !important;\r\n    }\r\n`;\r\n    document.head.appendChild(style);\r\n\r\n    function clearInput(button) {\r\n        const input = button.parentNode.querySelector('input');\r\n        input.value = '';\r\n        toggleClearButton(button);\r\n    }\r\n\r\n    function toggleClearButton(button) {\r\n        const input = button.parentNode.querySelector('input');\r\n        const clearButton = button;\r\n        if (input.value.length > 0) {\r\n            clearButton.style.display = 'block';\r\n        } else {\r\n            clearButton.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    const clearInputButtons = document.querySelectorAll('.input-clear');\r\n    clearInputButtons.forEach(button => {\r\n        const input = button.parentNode.querySelector('input');\r\n        input.addEventListener('input', () => toggleClearButton(button));\r\n        toggleClearButton(button);\r\n        button.addEventListener('click', () => clearInput(button));\r\n    });\r\n\r\n    ;[].forEach.call(\r\n        document.querySelectorAll('input[type=tel]'),\r\n        function (input) {\r\n            let keyCode\r\n            function mask(event) {\r\n                event.keyCode && (keyCode = event.keyCode)\r\n                let pos = this.selectionStart\r\n                if (pos < 3) event.preventDefault()\r\n                let matrix = '+7 (___) ___-__-__',\r\n                    i = 0,\r\n                    def = matrix.replace(/\\D/g, ''),\r\n                    val = this.value.replace(/\\D/g, ''),\r\n                    new_value = matrix.replace(/[_\\d]/g, function (a) {\r\n                        return i < val.length ? val.charAt(i++) || def.charAt(i) : a\r\n                    })\r\n                i = new_value.indexOf('_')\r\n                if (i != -1) {\r\n                    i < 5 && (i = 3)\r\n                    new_value = new_value.slice(0, i)\r\n                }\r\n                let reg = matrix\r\n                    .substr(0, this.value.length)\r\n                    .replace(/_+/g, function (a) {\r\n                        return '\\\\d{1,' + a.length + '}'\r\n                    })\r\n                    .replace(/[+()]/g, '\\\\$&')\r\n                reg = new RegExp('^' + reg + '$')\r\n                if (\r\n                    !reg.test(this.value) ||\r\n                    this.value.length < 5 ||\r\n                    (keyCode > 47 && keyCode < 58)\r\n                )\r\n                    this.value = new_value\r\n                if (event.type == 'blur' && this.value.length < 5) this.value = ''\r\n            }\r\n            input.addEventListener('input', mask, false)\r\n            input.addEventListener('focus', mask, false)\r\n            input.addEventListener('blur', mask, false)\r\n            input.addEventListener('keydown', mask, false)\r\n        }\r\n    )\r\n    function GetYMCID() {\r\n        var match = document.cookie.match('(?:^|;)\\\\s*_ym_uid=([^;]*)');\r\n        return (match) ? decodeURIComponent(match[1]) : false;\r\n    }\r\n    const formButtons = document.querySelectorAll('button[type=\"submit\"]');\r\n\r\n    let key = '';\r\n    // const ajaxSend = async (formData) => {\r\n    //     const response = await fetch(\"/netcat_template/ajax/hash-check.php\", {\r\n    //         method: \"POST\",\r\n    //         body: formData\r\n    //     });\r\n    //     if (!response.ok) {\r\n    //         throw new Error(`Ошибка по адресу hash-check, статус ошибки ${response.status}`);\r\n    //     }\r\n    //     return await response.text();\r\n    // };\r\n    // const formData = new FormData();\r\n    // formData.append('checker', 1);\r\n    // ajaxSend(formData)\r\n    //     .then((response) => {\r\n    //         key = response;\r\n    //         return key;\r\n    //     })\r\n    //     .catch((err) => console.error(err));\r\n\r\n    formButtons.forEach(button => {\r\n        const formObj = button.parentNode;\r\n        const divWrap = document.createElement('div');\r\n        divWrap.innerHTML =\r\n            `<input name=\"trafficSource\" type=\"hidden\" value=\"\">\r\n            <input name=\"istochnik\" type=\"hidden\" value=\"\">\r\n            <input name=\"clientID\" type=\"hidden\" value=\"${GetYMCID()}\">`;\r\n        formObj.appendChild(divWrap);\r\n\r\n        if (typeof sbjs !== 'undefined') {\r\n            sbjs.init(divWrap);\r\n            formObj.querySelector(\"input[name=trafficSource]\").value = sbjs.get.current.typ;\r\n            formObj.querySelector(\"input[name=istochnik]\").value = sbjs.get.current.src;\r\n        }\r\n\r\n        function getRandomNumber(min, max) {\r\n            return Math.ceil(Math.random() * (max - min)) + min - 1;\r\n        }\r\n        setTimeout(function () {\r\n            if (key != '') {\r\n                const input = document.createElement('input');\r\n                input.name = 'f_haystack';\r\n                input.type = 'hidden';\r\n                input.value = key;\r\n                formObj.appendChild(input);\r\n            }\r\n        }, getRandomNumber(5000, 7000));\r\n\r\n        button.addEventListener('click', async function (event) {\r\n            event.preventDefault();\r\n            const form = this.closest('form');\r\n            const modalOpen = form.dataset.modalOpen;\r\n            const popups = {\r\n                success: form.dataset.modalOk,\r\n                error: form.dataset.modalErr\r\n            };\r\n            const fields = {};\r\n            const inputs = form.querySelectorAll('input[type=\"tel\"], textarea, input[type=\"text\"]');\r\n            inputs.forEach(input => {\r\n                if (input.hasAttribute('required')) {\r\n                    fields[input.name] = {\r\n                        type: input.type,\r\n                        value: input.value\r\n                    };\r\n                }\r\n            })\r\n            const resultWrappers = {\r\n                success: document.querySelector(popups.success),\r\n                error: document.querySelector(popups.error)\r\n            };\r\n            if (validateInputs(fields)) {\r\n                await handleSubmission(this, form, resultWrappers, modalOpen);\r\n            } else {\r\n                markErrors(form);\r\n            }\r\n\r\n        });\r\n\r\n        const urlInputs = document.querySelectorAll(\"input[name='urlMessage'], input[name='title_url_message']\");\r\n        urlInputs.forEach(input => {\r\n            const cleanUrl = `${window.location.origin}${window.location.pathname}`;\r\n            input.value = input.name === 'urlMessage' ? cleanUrl : document.title;\r\n        });\r\n    });\r\n\r\n    async function handleSubmission(button, form, resultWrappers, modalOpen) {\r\n        const originalText = button.innerText;\r\n        button.innerHTML = \"Отправление\";\r\n        button.disabled = true;\r\n        try {\r\n            const response = await fetch(`/netcat_template/ajax/request.php`, {\r\n                method: 'POST',\r\n                body: new FormData(form)\r\n            });\r\n            const responseText = await response.text();\r\n            const isSuccess = response.ok;\r\n            openModal(isSuccess ? resultWrappers.success : resultWrappers.error, responseText, modalOpen);\r\n\r\n        } catch (error) {\r\n            openModal(resultWrappers.error, error.message, modalOpen);\r\n        } finally {\r\n            resetButton(button, originalText);\r\n        }\r\n    }\r\n\r\n    function openModal(wrapper, content, modalOpen) {\r\n        const modal = wrapper.closest('.popup');\r\n        wrapper.innerHTML = content;\r\n        const classes = modalOpen.split(' ');\r\n        classes.forEach(item => {\r\n            modal.classList.add(item);\r\n        });\r\n    }\r\n    function resetButton(button, buttonText) {\r\n        button.innerText = buttonText;\r\n        button.disabled = false;\r\n    }\r\n\r\n    function markErrors(form) {\r\n        const inputs = form.querySelectorAll('input[type=\"tel\"], textarea, input[type=\"text\"]');\r\n        inputs.forEach(input => {\r\n            switch (input.type) {\r\n                case 'tel':\r\n                    const phoneNumber = input.value.replace(/\\D/g, '');\r\n                    if (phoneNumber.length < 11) {\r\n                        addErrorStyle(input);\r\n                        input.setCustomValidity(\"Введите верный номер телефона\");\r\n                        input.reportValidity();\r\n                        setTimeout(() => {\r\n                            input.setCustomValidity('')\r\n                            removeErrorStyle(input);\r\n                        }, 2000);\r\n                    }\r\n                    break;\r\n                case 'textarea':\r\n                case 'text':\r\n                    if (!/[а-яА-ЯёЁ]/.test(input.value) || input.value.trim().length <= 2) {\r\n                        addErrorStyle(input);\r\n                        input.setCustomValidity(\"Текст должен содержать русские буквы\");\r\n                        input.reportValidity();\r\n                        setTimeout(() => {\r\n                            input.setCustomValidity('')\r\n                            removeErrorStyle(input);\r\n                        }, 2000);\r\n                    }\r\n                    break;\r\n                default:\r\n                    input.setCustomValidity(\"Поле не заполнено\");\r\n                    input.reportValidity();\r\n                    addErrorStyle(input);\r\n                    setTimeout(() => {\r\n                        input.setCustomValidity('')\r\n                        removeErrorStyle(input);\r\n                    }, 1000);\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n\r\n    function validateInputs(fields) {\r\n        let isValid = true;\r\n\r\n        // Проверка каждого поля\r\n        for (let fieldName in fields) {\r\n            const field = fields[fieldName];\r\n\r\n            switch (field.type) {\r\n                case 'tel':\r\n                    const phoneNumber = field.value.replace(/\\D/g, ''); // Убираем все нецифровые символы\r\n                    if (phoneNumber.length < 11) {\r\n                        isValid = false; // Если длина телефона меньше 11, валидация не пройдена\r\n                    }\r\n                    break;\r\n                case 'textarea':\r\n                case 'text':\r\n                    // Проверка на наличие хотя бы одного русского символа и минимальную длину строки\r\n                    if (!/[а-яА-ЯёЁ]/.test(field.value) || field.value.trim().length <= 2) {\r\n                        isValid = false; // Если условие не выполнено, валидация не пройдена\r\n                    }\r\n                    break;\r\n                default:\r\n                    isValid = false; // Если тип поля не соответствует известным, валидация не пройдена\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Если все поля валидны, добавляем классы\r\n        if (isValid) {\r\n            const popup = document.querySelector('.popup-change-ok');\r\n            if (popup) {\r\n                popup.classList.add('active', 'open');\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    function addErrorStyle(input) {\r\n        input.classList.add('custom-error');\r\n    }\r\n    function removeErrorStyle(input) {\r\n        input.classList.remove('custom-error');\r\n    }\r\n});"],"names":["document","addEventListener","style","createElement","toggleClearButton","button","input","parentNode","querySelector","value","length","clearButton","display","type","innerHTML","head","appendChild","querySelectorAll","forEach","call","let","keyCode","mask","event","this","selectionStart","preventDefault","matrix","i","def","replace","val","new_value","a","charAt","indexOf","slice","reg","substr","RegExp","test","formButtons","openModal","wrapper","content","modalOpen","modal","closest","split","item","classList","add","addErrorStyle","removeErrorStyle","remove","formObj","min","divWrap","match","cookie","decodeURIComponent","sbjs","init","get","current","typ","src","setTimeout","max","Math","ceil","random","async","form","dataset","popups","success","modalOk","error","modalErr","fields","hasAttribute","name","resultWrappers","isValid","fieldName","field","trim","popup","handleSubmission","originalText","innerText","disabled","response","await","fetch","method","body","FormData","responseText","text","ok","message","buttonText","setCustomValidity","reportValidity","cleanUrl","window","location","origin","pathname","title"],"mappings":"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"}